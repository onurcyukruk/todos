* Web Security Academy All labs
* SQL injection
** DONE LAB SQL injection UNION attack, determining the number of columns returned by the query
** DONE LAB SQL injection UNION attack, finding a column containing text
** DONE LAB SQL injection UNION attack, retrieving data from other tables
** TODO LAB SQL injection UNION attack, retrieving multiple values in a single column
** TODO LAB SQL injection attack, querying the database type and version on Oracle
** TODO LAB SQL injection attack, querying the database type and version on MySQL and Microsoft
** TODO LAB SQL injection attack, listing the database contents on non-Oracle databases
** TODO LAB SQL injection attack, listing the database contents on Oracle
** TODO LAB Blind SQL injection with conditional responses
** TODO LAB Blind SQL injection with conditional errors
** TODO LAB Blind SQL injection with time delays
** TODO LAB Blind SQL injection with time delays and information retrieval
** TODO LAB Blind SQL injection with out-of-band interaction
** TODO LAB Blind SQL injection with out-of-band data exfiltration
** DONE LAB SQL injection vulnerability in WHERE clause allowing retrieval of hidden data
** DONE LAB SQL injection vulnerability allowing login bypass
* Cross-site scripting
** TODO LAB Reflected XSS into HTML context with nothing encoded
** TODO LAB Reflected XSS into HTML context with most tags and attributes blocked
** TODO LAB Reflected XSS into HTML context with all tags blocked except custom ones
** TODO LAB Reflected XSS with event handlers and href attributes blocked
** TODO LAB Reflected XSS with some SVG markup allowed
** TODO LAB Reflected XSS into attribute with angle brackets HTML-encoded
** TODO LAB Stored XSS into anchor href attribute with double quotes HTML-encoded
** TODO LAB Reflected XSS in canonical link tag
** TODO LAB Reflected XSS into a JavaScript string with single quote and backslash escaped
** TODO LAB Reflected XSS into a JavaScript string with angle brackets HTML encoded
** TODO LAB Reflected XSS into a JavaScript string with angle brackets and double quotes HTML-encoded and single quotes escaped
** TODO LAB Reflected XSS in a JavaScript URL with some characters blocked
** TODO LAB Stored XSS into onclick event with angle brackets and double quotes HTML-encoded and single quotes and backslash escaped
** TODO LAB Reflected XSS into a template literal with angle brackets, single, double quotes, backslash and backticks Unicode-escaped
** TODO LAB Reflected XSS with AngularJS sandbox escape without strings
** TODO LAB Reflected XSS with AngularJS sandbox escape and CSP
** TODO LAB Stored XSS into HTML context with nothing encoded
** TODO LAB DOM XSS in document.write sink using source location.search
** TODO LAB DOM XSS in document.write sink using source location.search inside a select element
** TODO LAB DOM XSS in innerHTML sink using source location.search
** TODO LAB DOM XSS in jQuery anchor href attribute sink using location.search source
** TODO LAB DOM XSS in AngularJS expression with angle brackets and double quotes HTML-encoded
** TODO LAB Reflected DOM XSS
** TODO LAB Stored DOM XSS
** TODO LAB Exploiting cross-site scripting to steal cookies
** TODO LAB Exploiting cross-site scripting to capture passwords
** TODO LAB Exploiting XSS to perform CSRF
** TODO LAB Reflected XSS protected by CSP, with dangling markup attack
** TODO LAB Reflected XSS protected by very strict CSP, with dangling markup attack
** TODO LAB Reflected XSS protected by CSP, with CSP bypass
* Cross-site request forgery (CSRF)
** TODO LAB CSRF vulnerability with no defenses
** TODO LAB CSRF where token validation depends on request method
** TODO LAB CSRF where token validation depends on token being present
** TODO LAB CSRF where token is not tied to user session
** TODO LAB CSRF where token is tied to non-session cookie
** TODO LAB CSRF where token is duplicated in cookie
** TODO LAB CSRF where Referer validation depends on header being present
** TODO LAB CSRF with broken Referer validation
* Clickjacking
** TODO LAB Basic clickjacking with CSRF token protection
** TODO LAB Clickjacking with form input data prefilled from a URL parameter
** TODO LAB Clickjacking with a frame buster script
** TODO LAB Exploiting clickjacking vulnerability to trigger DOM-based XSS
** TODO LAB Multistep clickjacking
* DOM-based vulnerabilities
** TODO LAB DOM XSS using web messages
** TODO LAB DOM XSS using web messages and a JavaScript URL
** TODO LAB DOM XSS using web messages and JSON.parse
** TODO LAB DOM-based open redirection
** TODO LAB DOM-based cookie manipulation
** TODO LAB Exploiting DOM clobbering to enable XSS
** TODO LAB Clobbering DOM attributes to bypass HTML filters
* Cross-origin resource sharing (CORS)
** TODO LAB CORS vulnerability with basic origin reflection
** TODO LAB CORS vulnerability with trusted null origin
** TODO LAB CORS vulnerability with trusted insecure protocols
** TODO LAB CORS vulnerability with internal network pivot attack
* XML external entity (XXE) injection
** TODO LAB Exploiting XXE using external entities to retrieve files
** TODO LAB Exploiting XXE to perform SSRF attacks
** TODO LAB Blind XXE with out-of-band interaction
** TODO LAB Blind XXE with out-of-band interaction via XML parameter entities
** TODO LAB Exploiting blind XXE to exfiltrate data using a malicious external DTD
** TODO LAB Exploiting blind XXE to retrieve data via error messages
** TODO LAB Exploiting XXE to retrieve data by repurposing a local DTD
** TODO LAB Exploiting XInclude to retrieve files
** TODO LAB Exploiting XXE via image file upload
* Server-side request forgery (SSRF)
** TODO LAB Basic SSRF against the local server
** TODO LAB Basic SSRF against another back-end system
** TODO LAB SSRF with blacklist-based input filter
** TODO LAB SSRF with whitelist-based input filter
** TODO LAB SSRF with filter bypass via open redirection vulnerability
** TODO LAB Blind SSRF with out-of-band detection
** TODO LAB Blind SSRF with Shellshock exploitation
* HTTP request smuggling
** TODO LAB HTTP request smuggling, basic CL.TE vulnerability
** TODO LAB HTTP request smuggling, basic TE.CL vulnerability
** TODO LAB HTTP request smuggling, obfuscating the TE header
** TODO LAB HTTP request smuggling, confirming a CL.TE vulnerability via differential responses
** TODO LAB HTTP request smuggling, confirming a TE.CL vulnerability via differential responses
** TODO LAB Exploiting HTTP request smuggling to bypass front-end security controls, CL.TE vulnerability
** TODO LAB Exploiting HTTP request smuggling to bypass front-end security controls, TE.CL vulnerability
** TODO LAB Exploiting HTTP request smuggling to reveal front-end request rewriting
** TODO LAB Exploiting HTTP request smuggling to capture other users' requests
** TODO LAB Exploiting HTTP request smuggling to deliver reflected XSS
** TODO LAB Exploiting HTTP request smuggling to perform web cache poisoning
** TODO LAB Exploiting HTTP request smuggling to perform web cache deception
* OS command injection
** TODO LAB OS command injection, simple case
** TODO LAB Blind OS command injection with time delays
** TODO LAB Blind OS command injection with output redirection
** TODO LAB Blind OS command injection with out-of-band interaction
** TODO LAB Blind OS command injection with out-of-band data exfiltration
* Directory traversal
** TODO LAB File path traversal, simple case
** TODO LAB File path traversal, traversal sequences blocked with absolute path bypass
** TODO LAB File path traversal, traversal sequences stripped non-recursively
** TODO LAB File path traversal, traversal sequences stripped with superfluous URL-decode
** TODO LAB File path traversal, validation of start of path
** TODO LAB File path traversal, validation of file extension with null byte bypass
* Access control vulnerabilities
** TODO LAB Unprotected admin functionality
** TODO LAB Unprotected admin functionality with unpredictable URL
** TODO LAB User role controlled by request parameter
** TODO LAB User role can be modified in user profile
** TODO LAB URL-based access control can be circumvented
** TODO LAB Method-based access control can be circumvented
** TODO LAB User ID controlled by request parameter 
** TODO LAB User ID controlled by request parameter, with unpredictable user IDs 
** TODO LAB User ID controlled by request parameter with data leakage in redirect 
** TODO LAB User ID controlled by request parameter with password disclosure
** TODO LAB Insecure direct object references
** TODO LAB Multi-step process with no access control on one step 
** TODO LAB Referer-based access control 
* WebSockets
** TODO LAB Manipulating WebSocket messages to exploit vulnerabilities
** TODO LAB Manipulating the WebSocket handshake to exploit vulnerabilities
** TODO LAB Cross-site WebSocket hijacking
* Web cache poisoning
** TODO LAB Web cache poisoning with an unkeyed header
** TODO LAB Web cache poisoning with an unkeyed cookie
** TODO LAB Web cache poisoning with multiple headers
** TODO LAB Targeted web cache poisoning using an unknown header
** TODO LAB Web cache poisoning to exploit a DOM vulnerability via a cache with strict cacheability criteria
** TODO LAB Combining web cache poisoning vulnerabilities
